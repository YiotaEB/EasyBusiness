/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eb_managementapp.UI.Forms;

import eb_managementapp.DB.ConnectionCreator;
import static eb_managementapp.EB_ManagementApp.addProductTypeForm;
import static eb_managementapp.EB_ManagementApp.addProductsForm;
import static eb_managementapp.EB_ManagementApp.addSizeForm;
import static eb_managementapp.EB_ManagementApp.setUpForm;
import eb_managementapp.UI.Components.CheckboxGroup;
import eb_managementapp.UI.Components.JTableUtilities;
import java.awt.Point;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

public class AddProductsForm extends javax.swing.JFrame {

    final String TITLE = "Add Products";

    public AddProductsForm() {
        initComponents();

        String[] sizeNamesArray = new String[1];

        try {
            //SELECT From ProductType
            ConnectionCreator connectionCreator = new ConnectionCreator();
            Connection connection = connectionCreator.connect();

            Statement getProductsTypeStatement = connection.createStatement();
            Statement getDefaultSizesStatement = connection.createStatement();

            //typeComboBox
            String qr = " Select Name From ProductTypes";
            ResultSet rs;
            rs = getProductsTypeStatement.executeQuery(qr);

            typeComboBox.removeAllItems();
            // iterate through the java resultset
            while (rs.next()) {
                String typeName = rs.getString("Name");
                typeComboBox.addItem(typeName);
            }
            getProductsTypeStatement.close();

            //DefaultSizes List
            String qr2 = " Select Name From DefaultSizes";
            ResultSet rs2;
            rs2 = getDefaultSizesStatement.executeQuery(qr2);

            Vector<String> sizeNames = new Vector<>();
            // iterate through the java resultset
            while (rs2.next()) {
                sizeNames.add(rs2.getString("Name"));
            }
            getDefaultSizesStatement.close();

            //copy all elements from sizeNames (Vector) to sizeNamesArray(Array)
            sizeNamesArray = new String[sizeNames.size()];
            for (int i = 0; i < sizeNamesArray.length; i++) {
                sizeNamesArray[i] = sizeNames.get(i);
            }

        } catch (SQLException ex) {
            Logger.getLogger(AddProductsForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        CheckboxGroup group = new CheckboxGroup(sizeNamesArray);

        group.setBounds(new Rectangle(new Point(85, 110), group.getPreferredSize()));
        productPanel.add(group);
        pack();
        setLocationRelativeTo(null);

        //---
        setTitle(TITLE);
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productPanel = new javax.swing.JPanel();
        typeLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        addTypeButton = new javax.swing.JButton();
        productNameLabel = new javax.swing.JLabel();
        productNameTextField = new javax.swing.JTextField();
        sizeLabel = new javax.swing.JLabel();
        addSizeButton = new javax.swing.JButton();
        quantityLabel = new javax.swing.JLabel();
        quantitySpinner = new javax.swing.JSpinner();
        priceLabel = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        tablePanel = new javax.swing.JPanel();
        productsScrollPane = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        viewProductsButton = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        addNewProductButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        productPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Products", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(153, 153, 153))); // NOI18N

        typeLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        typeLabel.setText("Type:");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        addTypeButton.setText("Add Type");
        addTypeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTypeButtonActionPerformed(evt);
            }
        });

        productNameLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        productNameLabel.setText("Name:");

        productNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameTextFieldActionPerformed(evt);
            }
        });

        sizeLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        sizeLabel.setText("Size:");

        addSizeButton.setText("Add Size");
        addSizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSizeButtonActionPerformed(evt);
            }
        });

        quantityLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        quantityLabel.setText("Quantity:");

        priceLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        priceLabel.setText("Price: (â‚¬)");

        priceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout productPanelLayout = new javax.swing.GroupLayout(productPanel);
        productPanel.setLayout(productPanelLayout);
        productPanelLayout.setHorizontalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addComponent(quantityLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(priceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(productPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(typeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(productPanelLayout.createSequentialGroup()
                                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sizeLabel)
                                    .addComponent(productNameLabel))
                                .addGap(11, 11, 11)
                                .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addTypeButton)
                            .addComponent(addSizeButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(5, 5, 5))
        );
        productPanelLayout.setVerticalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeLabel)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productNameLabel)
                            .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(addTypeButton))
                .addGap(15, 15, 15)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSizeButton)
                    .addComponent(sizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityLabel)
                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceLabel)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List of Products", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(153, 153, 153))); // NOI18N

        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        productsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        productsTable.setAutoscrolls(false);
        productsTable.getTableHeader().setReorderingAllowed(false);
        productsScrollPane.setViewportView(productsTable);

        viewProductsButton.setText("View Products");
        viewProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProductsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(productsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewProductsButton)
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewProductsButton)
                .addContainerGap())
        );

        addNewProductButton.setText("Add New Product");
        addNewProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewProductButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addNewProductButton)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(addNewProductButton))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(productPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        setUpForm = new SetUpForm();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void productNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameTextFieldActionPerformed

    private void priceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTextFieldActionPerformed

    private void addNewProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewProductButtonActionPerformed

        ConnectionCreator connectionCreator = new ConnectionCreator();
        Connection connection = connectionCreator.connect();

        String queryInsertProducts = " insert into Products (Name,Quantity,Price,ProductSizeID,ProductTypeID)"
                + "values ('" + productNameTextField.getText() + "'," + quantitySpinner.getValue() + "," + priceTextField.getText() + ",0,0)";
        System.out.println(queryInsertProducts);
        try {
            //Create insert preparedstatement for administrator
            PreparedStatement prepareProductStatement = connection.prepareStatement(queryInsertProducts);
            prepareProductStatement.execute();

            showMessageDialog(null, "Product Added -->" + productNameTextField.getText());

        } catch (SQLException ex) {
            Logger.getLogger(AddProductsForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        setVisible(true);
        typeComboBox.setSelectedIndex(0);
        productNameTextField.setText("");
        quantitySpinner.setValue(0);
        priceTextField.setText("");
        
//        addProductsForm = new AddProductsForm();
    }//GEN-LAST:event_addNewProductButtonActionPerformed

    private void viewProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProductsButtonActionPerformed

        Vector<String> productNumbers = new Vector<>();
        Vector<String> productNames = new Vector<>();
        Vector<String> productSize = new Vector<>();
        Vector<String> productPrice = new Vector<>();
        Vector<String> productQuantity = new Vector<>();
        Vector<String> columnNames = new Vector<>();
        columnNames.add("#");
        columnNames.add("Name");
        columnNames.add("Size");
        columnNames.add("Price");
        columnNames.add("Quantity");
        Vector<Vector<String>> data = new Vector<>();

        try {
            //SELECT From ProductType
            ConnectionCreator connectionCreator = new ConnectionCreator();
            Connection connection = connectionCreator.connect();

            Statement getProductsListStatement = connection.createStatement();
            String query = " Select * From Products,ProductSizes Where Products.ID=ProductSizes.ID";
            ResultSet rs;
            rs = getProductsListStatement.executeQuery(query);
            Integer i = 0;

            while (rs.next()) {
                i++;
                productNumbers.add(i.toString());
                productNames.add(rs.getString("Name"));
                productSize.add(rs.getString("ProductSizes.Name"));
                productPrice.add("â‚¬ " + rs.getString("Price"));
                productQuantity.add(rs.getString("Quantity"));

            }
            getProductsListStatement.close();
        } catch (SQLException ex) {
            Logger.getLogger(AddProductsForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (int i = 0; i < productNumbers.size(); i++) {
            Vector<String> row = new Vector<>();
            row.add(productNumbers.get(i));
            row.add(productNames.get(i));
            row.add(productSize.get(i));
            row.add(productPrice.get(i));
            row.add(productQuantity.get(i));
            data.add(row);
        }

        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        productsTable.setModel(model);

        JTableUtilities.setJTableColumnsWidth(productsTable, productsTable.getWidth(), 10, 35, 20, 15, 20);

    }//GEN-LAST:event_viewProductsButtonActionPerformed

    private void addSizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSizeButtonActionPerformed
        setVisible(true);
        addSizeForm = new AddSizeForm();
    }//GEN-LAST:event_addSizeButtonActionPerformed

    private void addTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTypeButtonActionPerformed
        setVisible(true);
        addProductTypeForm = new AddProductTypeForm();
    }//GEN-LAST:event_addTypeButtonActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed

        //TODO Panayiota: Action when selecting an item in TypeComboBox.

    }//GEN-LAST:event_typeComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddProductsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewProductButton;
    private javax.swing.JButton addSizeButton;
    private javax.swing.JButton addTypeButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JLabel productNameLabel;
    private javax.swing.JTextField productNameTextField;
    private javax.swing.JPanel productPanel;
    private javax.swing.JScrollPane productsScrollPane;
    private javax.swing.JTable productsTable;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JButton viewProductsButton;
    // End of variables declaration//GEN-END:variables
}
